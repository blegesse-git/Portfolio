import type { IStroke } from "tsparticles/dist/Options/Interfaces/Particles/IStroke";
import type { ICoordinates } from "tsparticles/dist/Core/Interfaces/ICoordinates";
import type { IVelocity } from "tsparticles/dist/Core/Interfaces/IVelocity";
import type { MoveDirection, MoveDirectionAlt, ShapeType } from "tsparticles/dist/Enums";
import type { IParticleImage } from "tsparticles/dist/Core/Interfaces/IParticleImage";
import type { IParticleValueAnimation } from "tsparticles/dist/Core/Interfaces/IParticleValueAnimation";
import type { IShapeValues } from "tsparticles/dist/Options/Interfaces/Particles/Shape/IShapeValues";
import type { IBubbleParticleData } from "tsparticles/dist/Core/Interfaces/IBubbleParticleData";
import type { IParticles } from "tsparticles/dist/Options/Interfaces/Particles/IParticles";
import type { IHsl, IRgb } from "tsparticles/dist/Core/Interfaces/Colors";
import type { ILink } from "tsparticles/dist/Core/Interfaces/ILink";
export interface IParticle {
    misplaced: boolean;
    randomIndexData?: number;
    readonly pathAngle: number;
    readonly bubble: IBubbleParticleData;
    readonly close: boolean;
    readonly destroyed: boolean;
    readonly direction: MoveDirection | keyof typeof MoveDirection | MoveDirectionAlt;
    readonly fill: boolean;
    readonly id: number;
    readonly image?: IParticleImage;
    readonly initialVelocity: IVelocity;
    readonly links: ILink[];
    readonly offset: ICoordinates;
    readonly color: IParticleValueAnimation<IHsl | undefined>;
    readonly opacity: IParticleValueAnimation<number>;
    readonly rotate: IParticleValueAnimation<number>;
    readonly size: IParticleValueAnimation<number>;
    readonly strokeColor: IParticleValueAnimation<IHsl | undefined>;
    readonly particlesOptions: IParticles;
    readonly position: ICoordinates;
    readonly shadowColor: IRgb | undefined;
    readonly shape?: ShapeType | string;
    readonly shapeData?: IShapeValues;
    readonly sides: number;
    readonly stroke: IStroke;
    readonly strokeWidth: number;
    readonly velocity: IVelocity;
    readonly linksDistance?: number;
    readonly linksWidth?: number;
    readonly moveSpeed?: number;
    readonly sizeValue?: number;
    readonly sizeAnimationSpeed?: number;
    getPosition(): ICoordinates;
    getRadius(): number;
    getFillColor(): IHsl | undefined;
    getStrokeColor(): IHsl | undefined;
}
