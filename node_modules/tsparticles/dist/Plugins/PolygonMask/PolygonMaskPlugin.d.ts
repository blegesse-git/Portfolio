import type { IPlugin } from "tsparticles/dist/Core/Interfaces/IPlugin";
import { PolygonMaskInstance } from "tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance";
import type { Container } from "tsparticles/dist/Core/Container";
import type { RecursivePartial } from "tsparticles/dist/Types";
import type { IOptions } from "tsparticles/dist/Options/Interfaces/IOptions";
import type { IPolygonMaskOptions } from "tsparticles/dist/Plugins/PolygonMask/Options/Interfaces/IPolygonMaskOptions";
import { Options } from "tsparticles/dist/Options/Classes/Options";
declare class PolygonMaskPlugin implements IPlugin {
    readonly id: string;
    constructor();
    getPlugin(container: Container): PolygonMaskInstance;
    needsPlugin(options?: RecursivePartial<IOptions & IPolygonMaskOptions>): boolean;
    loadOptions(options: Options, source?: RecursivePartial<IOptions & IPolygonMaskOptions>): void;
}
declare const plugin: PolygonMaskPlugin;
export type { IPolygonMaskOptions };
export { plugin as PolygonMaskPlugin };
export * from "tsparticles/dist/Plugins/PolygonMask/Enums";
