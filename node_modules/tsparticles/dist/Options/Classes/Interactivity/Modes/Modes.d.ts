import type { IModes } from "tsparticles/dist/Options/Interfaces/Interactivity/Modes/IModes";
import { Bubble } from "tsparticles/dist/Options/Classes/Interactivity/Modes/Bubble";
import { Connect } from "tsparticles/dist/Options/Classes/Interactivity/Modes/Connect";
import { Grab } from "tsparticles/dist/Options/Classes/Interactivity/Modes/Grab";
import { Remove } from "tsparticles/dist/Options/Classes/Interactivity/Modes/Remove";
import { Push } from "tsparticles/dist/Options/Classes/Interactivity/Modes/Push";
import { Repulse } from "tsparticles/dist/Options/Classes/Interactivity/Modes/Repulse";
import { Slow } from "tsparticles/dist/Options/Classes/Interactivity/Modes/Slow";
import type { RecursivePartial } from "tsparticles/dist/Types";
import { Trail } from "tsparticles/dist/Options/Classes/Interactivity/Modes/Trail";
import type { IOptionLoader } from "tsparticles/dist/Options/Interfaces/IOptionLoader";
import { Attract } from "tsparticles/dist/Options/Classes/Interactivity/Modes/Attract";
import { Light } from "tsparticles/dist/Options/Classes/Interactivity/Modes/Light";
import { Bounce } from "tsparticles/dist/Options/Classes/Interactivity/Modes/Bounce";
export declare class Modes implements IModes, IOptionLoader<IModes> {
    attract: Attract;
    bounce: Bounce;
    bubble: Bubble;
    connect: Connect;
    grab: Grab;
    light: Light;
    push: Push;
    remove: Remove;
    repulse: Repulse;
    slow: Slow;
    trail: Trail;
    constructor();
    load(data?: RecursivePartial<IModes>): void;
}
